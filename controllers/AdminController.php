<?php

namespace app\controllers;

use app\models\User;
use Yii;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\web\Response;
use yii\filters\VerbFilter;
use app\models\LoginForm;
use app\models\ContactForm;
use app\models\Exercise;
use app\models\Problem;
use app\models\Subject;
use app\models\StuTask;

class AdminController extends Controller
{
    public $layout = "layui"; // 使用layui作布局
    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        $this->enableCsrfValidation = false;
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
            ],
        ];
    }

    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest) {
            return $this->goHome();
        }
        $role = Yii::$app->user->identity->role;
        if ($role != '0') { // 非管理员不能进入后台页面
            return $this->goHome();
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        return $this->render('index');
    }

    /**
     * Logout action.
     *
     * @return Response
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();

        return $this->goHome();
    }

    /**
     * 管理学生页面
     */
    public function actionStudent()
    {
        return $this->render('student');
    }

    /**
     * 获取学生
     */
    public function actionGetstudent()
    {
        $page = Yii::$app->request->getQueryParam('page');
        $limit = Yii::$app->request->getQueryParam('limit');
        $class = Yii::$app->request->getQueryParam('key');
        $start = ($page-1)*$limit;
        Yii::$app->response->format=Response::FORMAT_JSON;

        if ($class == null) {
            $data = User::find()
                ->where(['role' => 2])
                ->orderBy(['id' => SORT_DESC])
                ->asArray()
                ->all();
        } else {
            $data = User::find()
                ->where(['class' => $class])
                ->orderBy(['id' => SORT_DESC])
                ->asArray()
                ->all();
        }
        $count = count($data);

        foreach ($data as &$value){
            if ($value['role'] == '0') {
                $value['role'] = '教师';
            } else if ($value['role'] == '2') {
                $value['role'] = '学生';
            }
        }

        return ['code' => 0, 'message' => '', 'count' => $count, "data" => array_slice($data,$start,$limit)];
    }

    /**
     * 获取学生
     */
    public function actionUpdatestudent()
    {
        Yii::$app->response->format=Response::FORMAT_JSON;
        if (Yii::$app->request->isPost) {
            $studentId = Yii::$app->request->post('id');
            $field = Yii::$app->request->post('field');
            $value = Yii::$app->request->post('value');
            $student = User::findOne($studentId);
            if ($field == "username") {
                $student->username = $value;
            } else if ($field == "password") {
                $student->password = $value;
            } else if ($field == "class") {
                $student->class = $value;
            }
            $student->save();
            return ['code' => 0,'message' => 'success', ];
        }

        return ['code' => 0,'message' => 'failed', ];

    }

    /**
     * 添加学生
     */
    public function actionAddstudent()
    {
        if (Yii::$app->user->isGuest) {
            return $this->goHome();
        }
        if (Yii::$app->request->isPost) {
            $username = Yii::$app->request->post('username');
            $password = Yii::$app->request->post('password');
            $class = Yii::$app->request->post('class');
            $role = Yii::$app->request->post('role');
            $user = new User();
            $user->username = $username;
            $user->password = md5($password);
            $user->class = $class;
            $user->role = $role;
            $user->save();
            return $this->redirect(['/admin/student']);
        }

        return $this->render('add');
    }

    /**
     * 管理题库页面
     */
    public function actionExam()
    {
        return $this->render('exam');
    }

    /**
     * 获取练习
     */
    public function actionGetexam()
    {
        $page = Yii::$app->request->getQueryParam('page');
        $limit = Yii::$app->request->getQueryParam('limit');
        $start = ($page-1)*$limit;
        Yii::$app->response->format=Response::FORMAT_JSON;

        $data = (new \yii\db\Query())
            ->select(['E.*', 'S.subject'])
            ->from('exercise AS E')
            ->join('LEFT JOIN', 'subject AS S', 'S.s_id = E.s_id')
//            ->where(['E.is_active' => Exercise::STATUS_ACTIVE])
            ->all();
        foreach ($data as &$value) {
            if ($value['type'] == '1') {
                $value['type'] = '题库';
            }
            if ($value['type'] == '2') {
                $value['type'] = '测试';
            }
            if ($value['is_active'] == '0') {
                $value['is_active'] = '不可见';
            }
            if ($value['is_active'] == '1') {
                $value['is_active'] = '可见';
            }
        }

        $count = count($data);

        return ['code' => 0, 'message' => '', 'count' => $count, "data" => array_slice($data,$start,$limit)];

    }

    /**
     * 创建任务
     */
    public function actionNewtask()
    {
        $exercise = Exercise::find()->asArray()->all();
        if (Yii::$app->request->isPost) {
            $request = Yii::$app->request;
            $task = new StuTask();
            $task->task_name = $request->post('task_name');
            $task->content = $request->post('content');
            $task->e_id = $request->post('e_id');
            $task->from_time = $request->post('from_time');
            $task->end_time = $request->post('end_time');
            $task->save();
        }

        return $this->render('newtask', ['exercise' => $exercise]);
    }

    /**
     * 编辑exam方法
     */
    public function actionEditexam()
    {
        $examId = Yii::$app->request->getQueryParam('e_id'); // 编辑
        if (Yii::$app->request->isPost) { // 编辑或者新建
            $request = Yii::$app->request;
            $exam = Exercise::findOne($request->post('e_id'));
            if ($exam == null) { // 新建
                $exam = new Exercise();
            }
            $exam->name = $request->post('name');
            $exam->s_id = $request->post('s_id');
            $exam->content = $request->post('content');
            $exam->type = $request->post('type');
            $exam->is_active = $request->post('is_active');
            $exam->save();
            return $this->redirect('/admin/exam');
        }

        $subjects = Subject::find()->asArray()->all();
        if ($examId != null) {
            $examInfo = Exercise::findOne($examId);
            return $this->render('editexam', ['exam' => $examInfo, 'subject' => $subjects]);
        }

        return $this->redirect('/admin/newexam');
    }

    /**
     * 创建exam方法
     */
    public function actionNewexam()
    {
        if (Yii::$app->request->isPost) { // 编辑或者新建
            $request = Yii::$app->request;
            $exam = new Exercise();
            $exam->name = $request->post('name');
            $exam->s_id = $request->post('s_id');
            $exam->content = $request->post('content');
            $exam->type = $request->post('type');
            $exam->is_active = $request->post('is_active');
            $exam->save();
            return $this->redirect('/admin/exam');
        }
        $subjects = Subject::find()->asArray()->all();

        return $this->render('newexam', ['subject' => $subjects]);
    }

}
